{% assign ai_gen_id = section.id | replace: '_', '' | downcase %}

{% style %}
  .ai-kids-hero-{{ ai_gen_id }} {
    width: 100%;
    position: relative;
    overflow: visible;
    --hero-radius: {{ section.settings.hero_radius }}px;
    --kk-red: #D84E4E;
    --kk-yellow: #F3C52D;
    --kk-blue: #4E79B9;
    --kk-green: #2FA34A;
    --kk-orange: #DC7A2C;
    --kk-purple: #7E59B5;
  }

  .kk-hero-track {
    display: flex;
    gap: 24px;
    overflow: visible;
    padding: 0;
    margin-bottom: {{ section.settings.categories_margin_top }}px;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .kk-hero-track::-webkit-scrollbar { display: none; }

  .kk-hero-slide {
    flex: 1 1 0;
    border-radius: var(--hero-radius, 0px);
    overflow: hidden;
    position: relative;
    min-height: {{ section.settings.hero_height }}px;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }

  .kk-hero-slide img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 0;
  }

  .ai-hero-overlay-{{ ai_gen_id }} {
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 0;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, {{ section.settings.overlay_opacity | divided_by: 100.0 }}) 100%
    );
  }

  .ai-hero-content-{{ ai_gen_id }} {
    position: absolute;
    inset: auto 0 24px 24px;
    color: {{ section.settings.text_color }};
    z-index: 2;
  }

  .ai-hero-title-{{ ai_gen_id }} {
    font-size: {{ section.settings.title_size }}px;
    font-weight: 700;
    margin: 0 0 8px 0;
    line-height: 1.2;
  }

  .ai-hero-description-{{ ai_gen_id }} {
    font-size: {{ section.settings.description_size }}px;
    margin: 0 0 16px 0;
    line-height: 1.4;
    opacity: 0.9;
  }

  .ai-hero-button-{{ ai_gen_id }} {
    display: inline-block;
    padding: 12px 24px;
    background-color: {{ section.settings.button_bg_color }};
    color: {{ section.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ section.settings.button_border_radius }}px;
    font-weight: 600;
    font-size: 14px;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
  }
  .ai-hero-button-{{ ai_gen_id }}:hover {
    background-color: {{ section.settings.button_hover_color }};
    transform: translateY(-2px);
  }

  .ai-categories-section-{{ ai_gen_id }} {
    margin-top: {{ section.settings.categories_margin_top }}px;
    margin-bottom: {{ section.settings.categories_margin_bottom }}px;
    overflow: visible;
    position: relative;
  }

  .ai-categories-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: 1280px;
    margin: 0 auto;
  }

  .kk-category-scroller-wrap { position: relative; }

  .kk-category-scroller {
    --col-width: {{ section.settings.category_col_width }}px;
    --gap-y: {{ section.settings.category_gap_y }}px;
    --gap-x: {{ section.settings.category_gap_x }}px;
    display: grid;
    grid-auto-flow: column;
    grid-template-rows: repeat(2, auto);
    grid-auto-columns: var(--col-width);
    gap: var(--gap-y) var(--gap-x);
    overflow-x: auto;
    overflow-y: hidden;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    touch-action: pan-x pan-y;
    padding-inline: 16px;
    scroll-padding-inline: 16px;
    scrollbar-width: none;
    -ms-overflow-style: none;
    scroll-behavior: smooth;
  }
  .kk-category-scroller::-webkit-scrollbar { display: none; }

  .kk-category-item {
    width: var(--col-width);
    scroll-snap-align: start;
    text-align: center;
    text-decoration: none;
    color: {{ section.settings.category_text_color }};
    transition: transform 0.3s ease;
    display: grid; place-items: center;
  }
  .kk-category-item:hover { transform: translateY(-4px); }

  .kk-category-item__img {
    width: {{ section.settings.category_bubble_size }}px; height: {{ section.settings.category_bubble_size }}px;
    border-radius: 9999px;
    overflow: hidden;
    background: {{ section.settings.category_bg_color }};
    box-shadow: 0 2px 8px rgba(0,0,0,.06);
    display: grid; place-items: center;
    background-size: cover; background-position: center; background-repeat: no-repeat;
    transition: all .3s ease;
  }
  .kk-category-item:hover .kk-category-item__img { box-shadow: 0 6px 20px rgba(0,0,0,.15); transform: scale(1.05); }

  .kk-category-item__label { font-size: 14px; margin-top: 8px; line-height: 1.2; font-weight: 600; }

  .ai-scroll-arrow-{{ ai_gen_id }} {
    display: none;
    position: absolute;
    top: 50%; transform: translateY(-50%);
    width: 48px; height: 48px;
    background: #fff; border: none; border-radius: 50%;
    box-shadow: 0 4px 12px rgba(0,0,0,.15);
    cursor: pointer; z-index: 10; transition: all .3s ease;
    align-items: center; justify-content: center;
  }
  .ai-scroll-arrow-{{ ai_gen_id }}:hover { box-shadow: 0 6px 20px rgba(0,0,0,.25); transform: translateY(-50%) scale(1.05); }
  .ai-scroll-arrow-{{ ai_gen_id }}:active { transform: translateY(-50%) scale(.95); }
  .ai-scroll-arrow-left-{{ ai_gen_id }} { left: -8px; }
  .ai-scroll-arrow-right-{{ ai_gen_id }} { right: -8px; }
  .ai-scroll-arrow-{{ ai_gen_id }} svg { width: 20px; height: 20px; color: #333; }

  .kk-category-scroller .slick-dots,
  .kk-category-scroller .swiper-pagination,
  .kk-category-scroller .slider__dots { display: none !important; }

  @media (max-width: 767px) {
    .kk-hero-track {
      display: flex; gap: 16px;
      padding-left: 0; padding-right: 16px;
      scroll-padding-left: 0; scroll-padding-right: 16px;
      overflow-x: auto; scroll-snap-type: x mandatory;
      -webkit-overflow-scrolling: touch; touch-action: pan-x pan-y;
      --peek-right: 40px;
    }
    .kk-hero-slide {
      flex: 0 0 calc(100% - var(--peek-right));
      scroll-snap-align: start;
      border-radius: var(--hero-radius, 0px);
      overflow: hidden; background: #fff;
    }
    .ai-hero-title-{{ ai_gen_id }} { font-size: {{ section.settings.title_size | times: 0.8 }}px; }
    .ai-hero-description-{{ ai_gen_id }} { font-size: {{ section.settings.description_size | times: 0.9 }}px; }
    .ai-hero-content-{{ ai_gen_id }} { inset: auto 0 16px 16px; }

    .kk-category-scroller { --col-width: {{ section.settings.category_col_width_mobile }}px; --gap-y: {{ section.settings.category_gap_y_mobile }}px; --gap-x: {{ section.settings.category_gap_x_mobile }}px; }
    .kk-category-item__img { width: {{ section.settings.category_bubble_size_mobile }}px; height: {{ section.settings.category_bubble_size_mobile }}px; }
  }

  @media (min-width: 768px) {
    .kk-hero-track { overflow: visible; gap: 24px; padding: 0; }
    .kk-hero-slide { flex: 1 1 0; border-radius: var(--hero-radius, 0px); }
  }

  @media (min-width: 992px) {
    .kk-category-scroller {
      --col-width: {{ section.settings.category_col_width | times: 1.2 | round }}px; --gap-y: {{ section.settings.category_gap_y | times: 1.15 | round }}px; --gap-x: {{ section.settings.category_gap_x | times: 1.2 | round }}px;
      padding-inline: 24px; scroll-padding-inline: 24px; overflow-y: hidden;
    }
    .kk-category-item { width: var(--col-width); }
    .kk-category-item__img { width: {{ section.settings.category_bubble_size | times: 1.33 | round }}px; height: {{ section.settings.category_bubble_size | times: 1.33 | round }}px; box-shadow: 0 4px 12px rgba(0,0,0,.08); }
    .kk-category-item:hover { transform: none; }
    .kk-category-item:hover .kk-category-item__img { transform: none; box-shadow: 0 4px 12px rgba(0,0,0,.08); }
    .kk-category-item__label { font-size: 15px; margin-top: 12px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: var(--col-width); }
    .ai-scroll-arrow-{{ ai_gen_id }} { display: flex; }
  }
{% endstyle %}

<kids-hero-{{ ai_gen_id }} class="ai-kids-hero-{{ ai_gen_id }}" {{ section.shopify_attributes }}>
  <div class="kk-hero-track">
    {% for b in section.blocks %}
      {% if b.type == 'kids_slide' %}
        {% assign hero_image = b.settings.image %}
        <div class="kk-hero-slide" style="{% if hero_image %}background-image: url('{{ hero_image | image_url: width: 1200 }}');{% else %}background-color:#f4f4f4;{% endif %}" {{ b.shopify_attributes }}>
          {% if hero_image %}
            <img src="{{ hero_image | image_url: width: 1200 }}" alt="{{ hero_image.alt | escape }}" loading="lazy" width="{{ hero_image.width }}" height="{{ hero_image.height }}">
          {% endif %}
          <div class="ai-hero-overlay-{{ ai_gen_id }}"></div>
          <div class="ai-hero-content-{{ ai_gen_id }}">
            {% if b.settings.title != blank %}
              <h2 class="ai-hero-title-{{ ai_gen_id }}">{{ b.settings.title }}</h2>
            {% endif %}
            {% if b.settings.description != blank %}
              <p class="ai-hero-description-{{ ai_gen_id }}">{{ b.settings.description }}</p>
            {% endif %}
            {% if b.settings.button_text != blank and b.settings.button_link != blank %}
              <a href="{{ b.settings.button_link }}" class="ai-hero-button-{{ ai_gen_id }}">{{ b.settings.button_text }}</a>
            {% endif %}
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>

  <div class="ai-categories-section-{{ ai_gen_id }}">
    <div class="ai-categories-wrapper-{{ ai_gen_id }}">
      <div class="kk-category-scroller-wrap">
        <button class="ai-scroll-arrow-{{ ai_gen_id }} ai-scroll-arrow-left-{{ ai_gen_id }}" aria-label="{{ 'sections.kids-hero.scroll_left' | t }}">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" /></svg>
        </button>

        <div class="kk-category-scroller">
          {% for b in section.blocks %}
            {% if b.type == 'kids_category' %}
              {% assign category_image = b.settings.image %}
              <a href="{{ b.settings.link | default: '#' }}" class="kk-category-item" {{ b.shopify_attributes }}>
                <div class="kk-category-item__img" {% if category_image %}style="background-image:url('{{ category_image | image_url: width: 200 }}');"{% endif %}>
                  {% unless category_image %}
                    {{ 'image' | placeholder_svg_tag }}
                  {% endunless %}
                </div>
                {% if b.settings.name != blank %}
                  <span class="kk-category-item__label">{{ b.settings.name }}</span>
                {% endif %}
              </a>
            {% endif %}
          {% endfor %}
        </div>

        <button class="ai-scroll-arrow-{{ ai_gen_id }} ai-scroll-arrow-right-{{ ai_gen_id }}" aria-label="{{ 'sections.kids-hero.scroll_right' | t }}">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg>
        </button>
      </div>
    </div>
  </div>
</kids-hero-{{ ai_gen_id }}>

<script>
  (function() {
    class KidsHero{{ ai_gen_id }} extends HTMLElement {
      connectedCallback() {
        this.setupCategoryScroller();
        this.removeSliderHooks();
        this.setupScrollArrows();
      setupCategoryScroller() {
        const scroller = this.querySelector('.kk-category-scroller');
        if (!scroller) return;

        scroller.classList.remove('slider', 'swiper', 'slick');
        scroller.removeAttribute('data-slider');
        const existingDots = scroller.parentElement.querySelectorAll('.slick-dots, .swiper-pagination, .slider__dots');
        existingDots.forEach(d => d.remove());

        this.enableWheelAndKeys(scroller);
      }
      setupScrollArrows() {
        const scroller = this.querySelector('.kk-category-scroller');
        const leftArrow = this.querySelector('.ai-scroll-arrow-left-{{ ai_gen_id }}');
        const rightArrow = this.querySelector('.ai-scroll-arrow-right-{{ ai_gen_id }}');
        if (!scroller || !leftArrow || !rightArrow) return;
        const getScrollAmount = () => {
          const scrollerWidth = scroller.clientWidth;
          const gapX = window.innerWidth >= 992 ? 40 : (window.innerWidth >= 768 ? 28 : 22);
          return scrollerWidth - (2 * gapX);
        };
        leftArrow.addEventListener('click', () => scroller.scrollBy({ left: -getScrollAmount(), behavior: 'smooth' }));
        rightArrow.addEventListener('click', () => scroller.scrollBy({ left: getScrollAmount(), behavior: 'smooth' }));
        const updateArrowVisibility = () => {
          const { scrollLeft, scrollWidth, clientWidth } = scroller;
          leftArrow.style.opacity = scrollLeft <= 8 ? '0' : '1';
          leftArrow.style.pointerEvents = scrollLeft <= 8 ? 'none' : 'auto';
          leftArrow.style.visibility = scrollLeft <= 8 ? 'hidden' : 'visible';
          const maxScroll = scrollWidth - clientWidth;
          const isAtEnd = scrollLeft >= maxScroll - 8;
          rightArrow.style.opacity = isAtEnd ? '0' : '1';
          rightArrow.style.pointerEvents = isAtEnd ? 'none' : 'auto';
          rightArrow.style.visibility = isAtEnd ? 'hidden' : 'visible';
        };
        scroller.addEventListener('scroll', updateArrowVisibility);
        window.addEventListener('resize', updateArrowVisibility);
        updateArrowVisibility();
      }
      enableWheelAndKeys(scroller) {
        // Keyboard support
        scroller.setAttribute('tabindex', '0');
        scroller.addEventListener('keydown', (e) => {
          const step = Math.max(120, scroller.clientWidth * 0.8);
          if (e.key === 'ArrowLeft') { scroller.scrollBy({ left: -120, behavior: 'smooth' }); e.preventDefault(); }
          if (e.key === 'ArrowRight') { scroller.scrollBy({ left: 120, behavior: 'smooth' }); e.preventDefault(); }
          if (e.key === 'Home') { scroller.scrollTo({ left: 0, behavior: 'smooth' }); e.preventDefault(); }
          if (e.key === 'End') { scroller.scrollTo({ left: scroller.scrollWidth, behavior: 'smooth' }); e.preventDefault(); }
          if (e.key === 'PageUp') { scroller.scrollBy({ left: -step, behavior: 'smooth' }); e.preventDefault(); }
          if (e.key === 'PageDown') { scroller.scrollBy({ left: step, behavior: 'smooth' }); e.preventDefault(); }
        });
        // Mouse wheel (vertical -> horizontal) on desktop only
        scroller.addEventListener('wheel', (e) => {
          const isDesktop = window.matchMedia('(min-width: 768px)').matches;
          const canScroll = scroller.scrollWidth > scroller.clientWidth;
          if (!isDesktop || !canScroll) return; // let normal behavior on mobile or no overflow
          if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) {
            scroller.scrollLeft += e.deltaY;
            e.preventDefault();
          }
        }, { passive: false });
      }

      removeSliderHooks() {
        const heroTrack = this.querySelector('.kk-hero-track');
        if (!heroTrack) return;
        heroTrack.classList.remove('slider', 'swiper', 'slick', 'carousel');
        heroTrack.removeAttribute('data-slider');
        heroTrack.removeAttribute('data-slick');
        heroTrack.removeAttribute('data-swiper');
        heroTrack.removeAttribute('data-carousel');
        const existingDots = heroTrack.parentElement.querySelectorAll('.slick-dots, .swiper-pagination, .slider__dots, .carousel-dots');
        existingDots.forEach(d => d.remove());
        const existingArrows = heroTrack.parentElement.querySelectorAll('.slick-arrow, .swiper-button-prev, .swiper-button-next, .carousel-arrow');
        existingArrows.forEach(a => a.remove());
      }
    }
    customElements.define('kids-hero-{{ ai_gen_id }}', KidsHero{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "t:sections.kids-hero.name",
  "settings": [
    { "type": "range", "id": "hero_height", "min": 300, "max": 800, "step": 50, "unit": "px", "label": "Hero height", "default": 500 },
    { "type": "range", "id": "hero_radius", "min": 0, "max": 24, "step": 2, "unit": "px", "label": "Hero corner radius", "default": 0 },
    { "type": "range", "id": "overlay_opacity", "min": 0, "max": 80, "step": 5, "unit": "%", "label": "Overlay opacity", "default": 40 },

    { "type": "header", "content": "Content styling" },
    { "type": "range", "id": "title_size", "min": 18, "max": 48, "step": 2, "unit": "px", "label": "Title size", "default": 28 },
    { "type": "range", "id": "description_size", "min": 12, "max": 20, "step": 1, "unit": "px", "label": "Description size", "default": 16 },
    { "type": "color", "id": "text_color", "label": "Hero text color", "default": "#ffffff" },

    { "type": "header", "content": "Button styling" },
    { "type": "color", "id": "button_bg_color", "label": "Button background", "default": "#334fb4" },
    { "type": "color", "id": "button_text_color", "label": "Button text color", "default": "#ffffff" },
    { "type": "color", "id": "button_hover_color", "label": "Button hover color", "default": "#121212" },
    { "type": "range", "id": "button_border_radius", "min": 0, "max": 40, "step": 2, "unit": "px", "label": "Button border radius", "default": 6 },

    { "type": "header", "content": "Categories layout" },
    { "type": "range", "id": "categories_margin_top", "min": 20, "max": 100, "step": 10, "unit": "px", "label": "Categories top margin", "default": 60 },
    { "type": "range", "id": "categories_margin_bottom", "min": 0, "max": 100, "step": 10, "unit": "px", "label": "Categories bottom margin", "default": 40 },
    { "type": "color", "id": "category_bg_color", "label": "Category circle background", "default": "#f6f6f6" },
    { "type": "color", "id": "category_text_color", "label": "Category text color", "default": "#121212" },

    { "type": "header", "content": "Category sizing (desktop/tablet)" },
    { "type": "range", "id": "category_bubble_size", "min": 60, "max": 200, "step": 2, "unit": "px", "label": "Bubble size", "default": 112 },
    { "type": "range", "id": "category_col_width", "min": 80, "max": 240, "step": 2, "unit": "px", "label": "Column width", "default": 136 },
    { "type": "range", "id": "category_gap_x", "min": 8, "max": 60, "step": 2, "unit": "px", "label": "Horizontal gap", "default": 28 },
    { "type": "range", "id": "category_gap_y", "min": 8, "max": 60, "step": 2, "unit": "px", "label": "Vertical gap", "default": 24 },

    { "type": "header", "content": "Category sizing (mobile ≤767px)" },
    { "type": "range", "id": "category_bubble_size_mobile", "min": 48, "max": 160, "step": 2, "unit": "px", "label": "Bubble size (mobile)", "default": 96 },
    { "type": "range", "id": "category_col_width_mobile", "min": 72, "max": 220, "step": 2, "unit": "px", "label": "Column width (mobile)", "default": 110 },
    { "type": "range", "id": "category_gap_x_mobile", "min": 6, "max": 60, "step": 2, "unit": "px", "label": "Horizontal gap (mobile)", "default": 22 },
    { "type": "range", "id": "category_gap_y_mobile", "min": 6, "max": 60, "step": 2, "unit": "px", "label": "Vertical gap (mobile)", "default": 20 }
  ],
  "blocks": [
    {
      "type": "kids_slide",
      "name": "Slide",
      "limit": 5,
      "settings": [
        { "type": "image_picker", "id": "image", "label": "Background image" },
        { "type": "text", "id": "title", "label": "Title", "default": "Seasonal Highlights" },
        { "type": "textarea", "id": "description", "label": "Description", "default": "Discover our latest seasonal collection for kids" },
        { "type": "text", "id": "button_text", "label": "Button text", "default": "Shop Now" },
        { "type": "url", "id": "button_link", "label": "Button link" }
      ]
    },
    {
      "type": "kids_category",
      "name": "Category",
      "settings": [
        { "type": "text", "id": "name", "label": "Name", "default": "Baby" },
        { "type": "image_picker", "id": "image", "label": "Image" },
        { "type": "url", "id": "link", "label": "Link" }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.kids-hero.name",
      "blocks": [
        { "type": "kids_slide", "settings": { "title": "Seasonal Highlights" } },
        { "type": "kids_slide", "settings": { "title": "Accessories Focus" } },
        { "type": "kids_slide", "settings": { "title": "Kids & Parents" } },
        { "type": "kids_category", "settings": { "name": "Baby" } },
        { "type": "kids_category", "settings": { "name": "T-Shirts" } },
        { "type": "kids_category", "settings": { "name": "Pants" } },
        { "type": "kids_category", "settings": { "name": "Dresses" } },
        { "type": "kids_category", "settings": { "name": "Outerwear" } },
        { "type": "kids_category", "settings": { "name": "Accessories" } },
        { "type": "kids_category", "settings": { "name": "Toys" } },
        { "type": "kids_category", "settings": { "name": "Home/Interior" } }
      ]
    }
  ]
}
{% endschema %}
