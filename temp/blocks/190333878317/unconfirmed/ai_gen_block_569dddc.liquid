{% doc %}
  @prompt
    Create a responsive hero section for a kids' clothing store with a 3-column grid layout on desktop (seasonal highlight, accessories focus, kids/parents collection) and mobile slider. Include category navigation with round thumbnails below the hero. Each hero column should have full-height background images with overlay text and CTA buttons. The section should be customizable through Shopify's section settings for titles, descriptions, CTA text/links, and background images. Category icons should dynamically link to Shopify collections. Include settings for brand colors and support for 8 categories: Baby, T-Shirts, Pants, Dresses, Outerwear, Accessories, Toys, and Home/Interior. Mobile layout should display hero images as a swiper/slider with horizontal scrollable category icons., Make the swipe ui more modern, make it possible to drag swipe in smaller than desktop view, Make the Category collections swipeable in the same manner, Make the swipe function smoother, Category collections stops swiping at outerwear, Connect the Category collections with the stores collections directory, custom margin on Category collections
    , category collections do not update accordingly, I want to choose what picture to show in category collection word underneath circle and set link, make the categories in lines vertically and option to add more categories, for category 9 and upward, make it go next to onefurtheste most right and just tighten the margins
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-kids-hero-{{ ai_gen_id }} {
    width: 100%;
    position: relative;
  }

  .ai-hero-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: {{ block.settings.hero_gap }}px;
    margin-bottom: {{ block.settings.categories_margin_top }}px;
  }

  .ai-hero-column-{{ ai_gen_id }} {
    position: relative;
    min-height: {{ block.settings.hero_height }}px;
    border-radius: {{ block.settings.hero_border_radius }}px;
    overflow: hidden;
    display: flex;
    align-items: flex-end;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }

  .ai-hero-overlay-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, {{ block.settings.overlay_opacity | divided_by: 100.0 }}) 100%
    );
  }

  .ai-hero-content-{{ ai_gen_id }} {
    position: relative;
    z-index: 2;
    padding: {{ block.settings.content_padding }}px;
    color: {{ block.settings.text_color }};
    width: 100%;
  }

  .ai-hero-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    font-weight: 700;
    margin: 0 0 8px 0;
    line-height: 1.2;
  }

  .ai-hero-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    margin: 0 0 16px 0;
    line-height: 1.4;
    opacity: 0.9;
  }

  .ai-hero-button-{{ ai_gen_id }} {
    display: inline-block;
    padding: 12px 24px;
    background-color: {{ block.settings.button_bg_color }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-weight: 600;
    font-size: 14px;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
  }

  .ai-hero-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
    transform: translateY(-2px);
  }

  .ai-hero-mobile-slider-{{ ai_gen_id }} {
    display: none;
    position: relative;
    margin-bottom: {{ block.settings.categories_margin_top }}px;
  }

  .ai-hero-slider-container-{{ ai_gen_id }} {
    overflow: hidden;
    border-radius: {{ block.settings.hero_border_radius }}px;
    position: relative;
  }

  .ai-hero-slider-track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    will-change: transform;
  }

  .ai-hero-slide-{{ ai_gen_id }} {
    flex: 0 0 100%;
    min-height: {{ block.settings.hero_height }}px;
    position: relative;
    display: flex;
    align-items: flex-end;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }

  .ai-hero-dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 16px;
  }

  .ai-hero-dot-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.3);
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .ai-hero-dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.button_bg_color }};
    transform: scale(1.2);
  }

  .ai-categories-section-{{ ai_gen_id }} {
    margin-top: {{ block.settings.categories_margin_top }}px;
    margin-bottom: {{ block.settings.categories_margin_bottom }}px;
  }

  .ai-categories-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.categories_per_row }}, 1fr);
    gap: {{ block.settings.categories_gap }}px;
    max-width: 100%;
  }

  .ai-categories-grid-{{ ai_gen_id }} .ai-category-item-{{ ai_gen_id }}:nth-child(n+9) {
    grid-column: {{ block.settings.categories_per_row }};
    margin-left: auto;
    margin-right: 0;
    margin-top: -{{ block.settings.categories_gap | divided_by: 2 }}px;
  }

  .ai-categories-mobile-container-{{ ai_gen_id }} {
    display: none;
    position: relative;
    overflow: hidden;
  }

  .ai-categories-mobile-track-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: {{ block.settings.categories_gap | divided_by: 2 }}px;
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    will-change: transform;
    padding: 0 20px;
  }

  .ai-categories-mobile-row-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.categories_gap | divided_by: 2 }}px;
    flex-shrink: 0;
  }

  .ai-categories-mobile-row-{{ ai_gen_id }}:nth-child(n+3) {
    justify-content: flex-end;
    padding-right: 20px;
  }

  .ai-category-item-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-decoration: none;
    color: {{ block.settings.category_text_color }};
    transition: transform 0.3s ease;
    flex: 0 0 auto;
    min-width: 80px;
  }

  .ai-category-item-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
  }

  .ai-category-circle-{{ ai_gen_id }} {
    width: {{ block.settings.category_circle_size }}px;
    height: {{ block.settings.category_circle_size }}px;
    border-radius: 50%;
    background-color: {{ block.settings.category_bg_color }};
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 8px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }

  .ai-category-item-{{ ai_gen_id }}:hover .ai-category-circle-{{ ai_gen_id }} {
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    transform: scale(1.05);
  }

  .ai-category-circle-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-category-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-category-placeholder-{{ ai_gen_id }} svg {
    width: 50%;
    height: 50%;
    opacity: 0.5;
  }

  .ai-category-name-{{ ai_gen_id }} {
    font-size: {{ block.settings.category_text_size }}px;
    font-weight: 600;
    text-align: center;
    line-height: 1.2;
  }

  @media screen and (max-width: 990px) {
    .ai-hero-grid-{{ ai_gen_id }} {
      display: none;
    }

    .ai-hero-mobile-slider-{{ ai_gen_id }} {
      display: block;
    }

    .ai-categories-grid-{{ ai_gen_id }} {
      display: none;
    }

    .ai-categories-mobile-container-{{ ai_gen_id }} {
      display: block;
    }

    .ai-hero-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.8 }}px;
    }

    .ai-hero-description-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_size | times: 0.9 }}px;
    }

    .ai-category-circle-{{ ai_gen_id }} {
      width: {{ block.settings.category_circle_size | times: 0.9 }}px;
      height: {{ block.settings.category_circle_size | times: 0.9 }}px;
    }

    .ai-category-name-{{ ai_gen_id }} {
      font-size: {{ block.settings.category_text_size | times: 0.9 }}px;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-hero-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.title_size | times: 0.7 }}px;
    }

    .ai-hero-description-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_size | times: 0.8 }}px;
    }

    .ai-hero-content-{{ ai_gen_id }} {
      padding: {{ block.settings.content_padding | times: 0.8 }}px;
    }

    .ai-category-circle-{{ ai_gen_id }} {
      width: {{ block.settings.category_circle_size | times: 0.8 }}px;
      height: {{ block.settings.category_circle_size | times: 0.8 }}px;
    }

    .ai-category-name-{{ ai_gen_id }} {
      font-size: {{ block.settings.category_text_size | times: 0.8 }}px;
    }
  }
{% endstyle %}

<kids-hero-{{ ai_gen_id }} class="ai-kids-hero-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-hero-grid-{{ ai_gen_id }}">
    {% for i in (1..3) %}
      {% liquid
        assign image_key = 'hero_image_' | append: i
        assign title_key = 'hero_title_' | append: i
        assign description_key = 'hero_description_' | append: i
        assign button_text_key = 'hero_button_text_' | append: i
        assign button_link_key = 'hero_button_link_' | append: i

        assign hero_image = block.settings[image_key]
        assign hero_title = block.settings[title_key]
        assign hero_description = block.settings[description_key]
        assign hero_button_text = block.settings[button_text_key]
        assign hero_button_link = block.settings[button_link_key]
      %}

      <div 
        class="ai-hero-column-{{ ai_gen_id }}"
        {% if hero_image %}
          style="background-image: url('{{ hero_image | image_url: width: 800 }}');"
        {% else %}
          style="background-color: #f4f4f4;"
        {% endif %}
      >
        <div class="ai-hero-overlay-{{ ai_gen_id }}"></div>
        <div class="ai-hero-content-{{ ai_gen_id }}">
          {% if hero_title != blank %}
            <h2 class="ai-hero-title-{{ ai_gen_id }}">{{ hero_title }}</h2>
          {% endif %}
          {% if hero_description != blank %}
            <p class="ai-hero-description-{{ ai_gen_id }}">{{ hero_description }}</p>
          {% endif %}
          {% if hero_button_text != blank and hero_button_link != blank %}
            <a href="{{ hero_button_link }}" class="ai-hero-button-{{ ai_gen_id }}">
              {{ hero_button_text }}
            </a>
          {% endif %}
        </div>
      </div>
    {% endfor %}
  </div>

  <div class="ai-hero-mobile-slider-{{ ai_gen_id }}">
    <div class="ai-hero-slider-container-{{ ai_gen_id }}">
      <div class="ai-hero-slider-track-{{ ai_gen_id }}" data-slider-track>
        {% for i in (1..3) %}
          {% liquid
            assign image_key = 'hero_image_' | append: i
            assign title_key = 'hero_title_' | append: i
            assign description_key = 'hero_description_' | append: i
            assign button_text_key = 'hero_button_text_' | append: i
            assign button_link_key = 'hero_button_link_' | append: i

            assign hero_image = block.settings[image_key]
            assign hero_title = block.settings[title_key]
            assign hero_description = block.settings[description_key]
            assign hero_button_text = block.settings[button_text_key]
            assign hero_button_link = block.settings[button_link_key]
          %}

          <div 
            class="ai-hero-slide-{{ ai_gen_id }}"
            {% if hero_image %}
              style="background-image: url('{{ hero_image | image_url: width: 800 }}');"
            {% else %}
              style="background-color: #f4f4f4;"
            {% endif %}
          >
            <div class="ai-hero-overlay-{{ ai_gen_id }}"></div>
            <div class="ai-hero-content-{{ ai_gen_id }}">
              {% if hero_title != blank %}
                <h2 class="ai-hero-title-{{ ai_gen_id }}">{{ hero_title }}</h2>
              {% endif %}
              {% if hero_description != blank %}
                <p class="ai-hero-description-{{ ai_gen_id }}">{{ hero_description }}</p>
              {% endif %}
              {% if hero_button_text != blank and hero_button_link != blank %}
                <a href="{{ hero_button_link }}" class="ai-hero-button-{{ ai_gen_id }}">
                  {{ hero_button_text }}
                </a>
              {% endif %}
            </div>
          </div>
        {% endfor %}
      </div>
    </div>
    <div class="ai-hero-dots-{{ ai_gen_id }}" data-slider-dots>
      {% for i in (1..3) %}
        <button class="ai-hero-dot-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}" data-slide="{{ forloop.index0 }}"></button>
      {% endfor %}
    </div>
  </div>

  <div class="ai-categories-section-{{ ai_gen_id }}">
    <div class="ai-categories-grid-{{ ai_gen_id }}">
      {% for i in (1..20) %}
        {% liquid
          assign category_name_key = 'category_' | append: i | append: '_name'
          assign category_image_key = 'category_' | append: i | append: '_image'
          assign category_link_key = 'category_' | append: i | append: '_link'

          assign category_name = block.settings[category_name_key]
          assign category_image = block.settings[category_image_key]
          assign category_link = block.settings[category_link_key]
        %}

        {% if category_name != blank %}
          <a href="{{ category_link | default: '#' }}" class="ai-category-item-{{ ai_gen_id }}">
            <div class="ai-category-circle-{{ ai_gen_id }}"
              {% if category_image %}
                style="background-image: url('{{ category_image | image_url: width: 200 }}');"
              {% endif %}
            >
              {% unless category_image %}
                <div class="ai-category-placeholder-{{ ai_gen_id }}">
                  {{ 'image' | placeholder_svg_tag }}
                </div>
              {% endunless %}
            </div>
            <span class="ai-category-name-{{ ai_gen_id }}">{{ category_name }}</span>
          </a>
        {% endif %}
      {% endfor %}
    </div>

    <div class="ai-categories-mobile-container-{{ ai_gen_id }}">
      <div class="ai-categories-mobile-track-{{ ai_gen_id }}" data-categories-track>
        {% assign categories_per_mobile_row = block.settings.categories_per_mobile_row %}
        {% assign total_categories = 0 %}
        
        {% for i in (1..20) %}
          {% liquid
            assign category_name_key = 'category_' | append: i | append: '_name'
            assign category_name = block.settings[category_name_key]
          %}
          {% if category_name != blank %}
            {% assign total_categories = total_categories | plus: 1 %}
          {% endif %}
        {% endfor %}

        {% assign rows_needed = total_categories | divided_by: categories_per_mobile_row | ceil %}
        {% assign category_index = 1 %}

        {% for row in (1..rows_needed) %}
          <div class="ai-categories-mobile-row-{{ ai_gen_id }}">
            {% for col in (1..categories_per_mobile_row) %}
              {% if category_index <= 20 %}
                {% liquid
                  assign found_category = false
                  assign current_check = category_index
                %}
                
                {% for check in (current_check..20) %}
                  {% unless found_category %}
                    {% liquid
                      assign category_name_key = 'category_' | append: check | append: '_name'
                      assign category_image_key = 'category_' | append: check | append: '_image'
                      assign category_link_key = 'category_' | append: check | append: '_link'

                      assign category_name = block.settings[category_name_key]
                      assign category_image = block.settings[category_image_key]
                      assign category_link = block.settings[category_link_key]
                    %}

                    {% if category_name != blank %}
                      {% assign found_category = true %}
                      {% assign category_index = check | plus: 1 %}
                      
                      <a href="{{ category_link | default: '#' }}" class="ai-category-item-{{ ai_gen_id }}">
                        <div class="ai-category-circle-{{ ai_gen_id }}"
                          {% if category_image %}
                            style="background-image: url('{{ category_image | image_url: width: 200 }}');"
                          {% endif %}
                        >
                          {% unless category_image %}
                            <div class="ai-category-placeholder-{{ ai_gen_id }}">
                              {{ 'image' | placeholder_svg_tag }}
                            </div>
                          {% endunless %}
                        </div>
                        <span class="ai-category-name-{{ ai_gen_id }}">{{ category_name }}</span>
                      </a>
                    {% endif %}
                  {% endunless %}
                {% endfor %}
                
                {% unless found_category %}
                  {% assign category_index = category_index | plus: 1 %}
                {% endunless %}
              {% endif %}
            {% endfor %}
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</kids-hero-{{ ai_gen_id }}>

<script>
  (function() {
    class KidsHero{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.totalSlides = 3;
        this.isTransitioning = false;
        this.touchStartX = 0;
        this.touchEndX = 0;
        this.categoriesStartY = 0;
        this.categoriesEndY = 0;
        this.categoriesCurrentY = 0;
        this.categoriesIsDragging = false;
        this.categoriesMaxScroll = 0;
      }

      connectedCallback() {
        this.sliderTrack = this.querySelector('[data-slider-track]');
        this.dots = this.querySelectorAll('[data-slider-dots] button');
        this.categoriesTrack = this.querySelector('[data-categories-track]');
        
        if (this.sliderTrack && this.dots.length > 0) {
          this.setupHeroSlider();
        }
        
        if (this.categoriesTrack) {
          this.setupCategoriesSlider();
        }
      }

      setupHeroSlider() {
        this.dots.forEach((dot, index) => {
          dot.addEventListener('click', () => this.goToSlide(index));
        });

        this.sliderTrack.addEventListener('touchstart', this.handleTouchStart.bind(this), { passive: true });
        this.sliderTrack.addEventListener('touchmove', this.handleTouchMove.bind(this), { passive: true });
        this.sliderTrack.addEventListener('touchend', this.handleTouchEnd.bind(this), { passive: true });

        this.sliderTrack.addEventListener('mousedown', this.handleMouseDown.bind(this));
        this.sliderTrack.addEventListener('mousemove', this.handleMouseMove.bind(this));
        this.sliderTrack.addEventListener('mouseup', this.handleMouseUp.bind(this));
        this.sliderTrack.addEventListener('mouseleave', this.handleMouseUp.bind(this));

        this.updateSlider();
      }

      setupCategoriesSlider() {
        this.calculateCategoriesMaxScroll();
        
        this.categoriesTrack.addEventListener('touchstart', this.handleCategoriesTouchStart.bind(this), { passive: true });
        this.categoriesTrack.addEventListener('touchmove', this.handleCategoriesTouchMove.bind(this), { passive: false });
        this.categoriesTrack.addEventListener('touchend', this.handleCategoriesTouchEnd.bind(this), { passive: true });

        this.categoriesTrack.addEventListener('mousedown', this.handleCategoriesMouseDown.bind(this));
        this.categoriesTrack.addEventListener('mousemove', this.handleCategoriesMouseMove.bind(this));
        this.categoriesTrack.addEventListener('mouseup', this.handleCategoriesMouseUp.bind(this));
        this.categoriesTrack.addEventListener('mouseleave', this.handleCategoriesMouseUp.bind(this));

        window.addEventListener('resize', () => {
          this.calculateCategoriesMaxScroll();
        });
      }

      calculateCategoriesMaxScroll() {
        if (!this.categoriesTrack) return;
        
        const containerHeight = this.categoriesTrack.parentElement.offsetHeight;
        const trackHeight = this.categoriesTrack.scrollHeight;
        this.categoriesMaxScroll = Math.max(0, trackHeight - containerHeight);
      }

      handleTouchStart(e) {
        this.touchStartX = e.touches[0].clientX;
      }

      handleTouchMove(e) {
        if (!this.touchStartX) return;
        this.touchEndX = e.touches[0].clientX;
      }

      handleTouchEnd(e) {
        if (!this.touchStartX || !this.touchEndX) return;
        
        const diff = this.touchStartX - this.touchEndX;
        const threshold = 50;

        if (Math.abs(diff) > threshold) {
          if (diff > 0) {
            this.nextSlide();
          } else {
            this.prevSlide();
          }
        }

        this.touchStartX = 0;
        this.touchEndX = 0;
      }

      handleMouseDown(e) {
        e.preventDefault();
        this.touchStartX = e.clientX;
        this.sliderTrack.style.cursor = 'grabbing';
      }

      handleMouseMove(e) {
        if (!this.touchStartX) return;
        this.touchEndX = e.clientX;
      }

      handleMouseUp(e) {
        if (!this.touchStartX) return;
        
        const diff = this.touchStartX - (this.touchEndX || this.touchStartX);
        const threshold = 50;

        if (Math.abs(diff) > threshold) {
          if (diff > 0) {
            this.nextSlide();
          } else {
            this.prevSlide();
          }
        }

        this.touchStartX = 0;
        this.touchEndX = 0;
        this.sliderTrack.style.cursor = 'grab';
      }

      handleCategoriesTouchStart(e) {
        this.categoriesStartY = e.touches[0].clientY;
        this.categoriesIsDragging = true;
        this.categoriesTrack.style.transition = 'none';
      }

      handleCategoriesTouchMove(e) {
        if (!this.categoriesIsDragging) return;
        
        e.preventDefault();
        const currentY = e.touches[0].clientY;
        const diff = this.categoriesStartY - currentY;
        const newY = Math.max(-this.categoriesMaxScroll, Math.min(0, this.categoriesCurrentY - diff));
        
        this.categoriesTrack.style.transform = `translateY(${newY}px)`;
      }

      handleCategoriesTouchEnd(e) {
        if (!this.categoriesIsDragging) return;
        
        const currentY = e.changedTouches[0].clientY;
        const diff = this.categoriesStartY - currentY;
        this.categoriesCurrentY = Math.max(-this.categoriesMaxScroll, Math.min(0, this.categoriesCurrentY - diff));
        
        this.categoriesTrack.style.transition = 'transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        this.categoriesTrack.style.transform = `translateY(${this.categoriesCurrentY}px)`;
        
        this.categoriesIsDragging = false;
      }

      handleCategoriesMouseDown(e) {
        e.preventDefault();
        this.categoriesStartY = e.clientY;
        this.categoriesIsDragging = true;
        this.categoriesTrack.style.transition = 'none';
        this.categoriesTrack.style.cursor = 'grabbing';
      }

      handleCategoriesMouseMove(e) {
        if (!this.categoriesIsDragging) return;
        
        const currentY = e.clientY;
        const diff = this.categoriesStartY - currentY;
        const newY = Math.max(-this.categoriesMaxScroll, Math.min(0, this.categoriesCurrentY - diff));
        
        this.categoriesTrack.style.transform = `translateY(${newY}px)`;
      }

      handleCategoriesMouseUp(e) {
        if (!this.categoriesIsDragging) return;
        
        const currentY = e.clientY || this.categoriesStartY;
        const diff = this.categoriesStartY - currentY;
        this.categoriesCurrentY = Math.max(-this.categoriesMaxScroll, Math.min(0, this.categoriesCurrentY - diff));
        
        this.categoriesTrack.style.transition = 'transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        this.categoriesTrack.style.transform = `translateY(${this.categoriesCurrentY}px)`;
        this.categoriesTrack.style.cursor = 'grab';
        
        this.categoriesIsDragging = false;
      }

      goToSlide(index) {
        if (this.isTransitioning || index === this.currentSlide) return;
        
        this.currentSlide = index;
        this.updateSlider();
      }

      nextSlide() {
        const nextIndex = (this.currentSlide + 1) % this.totalSlides;
        this.goToSlide(nextIndex);
      }

      prevSlide() {
        const prevIndex = (this.currentSlide - 1 + this.totalSlides) % this.totalSlides;
        this.goToSlide(prevIndex);
      }

      updateSlider() {
        if (!this.sliderTrack) return;
        
        this.isTransitioning = true;
        const translateX = -this.currentSlide * 100;
        this.sliderTrack.style.transform = `translateX(${translateX}%)`;

        this.dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });

        setTimeout(() => {
          this.isTransitioning = false;
        }, 400);
      }
    }

    customElements.define('kids-hero-{{ ai_gen_id }}', KidsHero{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Kids hero section",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Hero section"
    },
    {
      "type": "range",
      "id": "hero_height",
      "min": 300,
      "max": 800,
      "step": 50,
      "unit": "px",
      "label": "Hero height",
      "default": 500
    },
    {
      "type": "range",
      "id": "hero_gap",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between columns",
      "default": 16
    },
    {
      "type": "range",
      "id": "hero_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 80,
      "step": 5,
      "unit": "%",
      "label": "Overlay opacity",
      "default": 40
    },
    {
      "type": "header",
      "content": "Hero column 1"
    },
    {
      "type": "image_picker",
      "id": "hero_image_1",
      "label": "Background image"
    },
    {
      "type": "text",
      "id": "hero_title_1",
      "label": "Title",
      "default": "Seasonal Highlights"
    },
    {
      "type": "textarea",
      "id": "hero_description_1",
      "label": "Description",
      "default": "Discover our latest seasonal collection for kids"
    },
    {
      "type": "text",
      "id": "hero_button_text_1",
      "label": "Button text",
      "default": "Shop Now"
    },
    {
      "type": "url",
      "id": "hero_button_link_1",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Hero column 2"
    },
    {
      "type": "image_picker",
      "id": "hero_image_2",
      "label": "Background image"
    },
    {
      "type": "text",
      "id": "hero_title_2",
      "label": "Title",
      "default": "Accessories Focus"
    },
    {
      "type": "textarea",
      "id": "hero_description_2",
      "label": "Description",
      "default": "Complete the look with our fun accessories"
    },
    {
      "type": "text",
      "id": "hero_button_text_2",
      "label": "Button text",
      "default": "Explore"
    },
    {
      "type": "url",
      "id": "hero_button_link_2",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Hero column 3"
    },
    {
      "type": "image_picker",
      "id": "hero_image_3",
      "label": "Background image"
    },
    {
      "type": "text",
      "id": "hero_title_3",
      "label": "Title",
      "default": "Kids & Parents"
    },
    {
      "type": "textarea",
      "id": "hero_description_3",
      "label": "Description",
      "default": "Matching styles for the whole family"
    },
    {
      "type": "text",
      "id": "hero_button_text_3",
      "label": "Button text",
      "default": "View All"
    },
    {
      "type": "url",
      "id": "hero_button_link_3",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Content styling"
    },
    {
      "type": "range",
      "id": "content_padding",
      "min": 16,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Content padding",
      "default": 32
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 18,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 28
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 16
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Button styling"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button background",
      "default": "#334fb4"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#121212"
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 6
    },
    {
      "type": "header",
      "content": "Categories layout"
    },
    {
      "type": "range",
      "id": "categories_per_row",
      "min": 3,
      "max": 8,
      "step": 1,
      "label": "Categories per row (desktop)",
      "default": 4
    },
    {
      "type": "range",
      "id": "categories_per_mobile_row",
      "min": 2,
      "max": 4,
      "step": 1,
      "label": "Categories per row (mobile)",
      "default": 3
    },
    {
      "type": "range",
      "id": "categories_margin_top",
      "min": 20,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Top margin",
      "default": 60
    },
    {
      "type": "range",
      "id": "categories_margin_bottom",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Bottom margin",
      "default": 40
    },
    {
      "type": "range",
      "id": "categories_gap",
      "min": 8,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between categories",
      "default": 20
    },
    {
      "type": "range",
      "id": "category_circle_size",
      "min": 60,
      "max": 120,
      "step": 10,
      "unit": "px",
      "label": "Circle size",
      "default": 80
    },
    {
      "type": "range",
      "id": "category_text_size",
      "min": 10,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 14
    },
    {
      "type": "color",
      "id": "category_bg_color",
      "label": "Circle background",
      "default": "#f3f3f3"
    },
    {
      "type": "color",
      "id": "category_text_color",
      "label": "Text color",
      "default": "#121212"
    },
    {
      "type": "header",
      "content": "Category 1"
    },
    {
      "type": "text",
      "id": "category_1_name",
      "label": "Name",
      "default": "Baby"
    },
    {
      "type": "image_picker",
      "id": "category_1_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_1_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 2"
    },
    {
      "type": "text",
      "id": "category_2_name",
      "label": "Name",
      "default": "T-Shirts"
    },
    {
      "type": "image_picker",
      "id": "category_2_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_2_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 3"
    },
    {
      "type": "text",
      "id": "category_3_name",
      "label": "Name",
      "default": "Pants"
    },
    {
      "type": "image_picker",
      "id": "category_3_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_3_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 4"
    },
    {
      "type": "text",
      "id": "category_4_name",
      "label": "Name",
      "default": "Dresses"
    },
    {
      "type": "image_picker",
      "id": "category_4_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_4_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 5"
    },
    {
      "type": "text",
      "id": "category_5_name",
      "label": "Name",
      "default": "Outerwear"
    },
    {
      "type": "image_picker",
      "id": "category_5_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_5_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 6"
    },
    {
      "type": "text",
      "id": "category_6_name",
      "label": "Name",
      "default": "Accessories"
    },
    {
      "type": "image_picker",
      "id": "category_6_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_6_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 7"
    },
    {
      "type": "text",
      "id": "category_7_name",
      "label": "Name",
      "default": "Toys"
    },
    {
      "type": "image_picker",
      "id": "category_7_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_7_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 8"
    },
    {
      "type": "text",
      "id": "category_8_name",
      "label": "Name",
      "default": "Home/Interior"
    },
    {
      "type": "image_picker",
      "id": "category_8_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_8_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 9"
    },
    {
      "type": "text",
      "id": "category_9_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_9_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_9_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 10"
    },
    {
      "type": "text",
      "id": "category_10_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_10_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_10_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 11"
    },
    {
      "type": "text",
      "id": "category_11_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_11_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_11_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 12"
    },
    {
      "type": "text",
      "id": "category_12_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_12_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_12_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 13"
    },
    {
      "type": "text",
      "id": "category_13_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_13_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_13_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 14"
    },
    {
      "type": "text",
      "id": "category_14_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_14_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_14_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 15"
    },
    {
      "type": "text",
      "id": "category_15_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_15_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_15_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 16"
    },
    {
      "type": "text",
      "id": "category_16_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_16_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_16_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 17"
    },
    {
      "type": "text",
      "id": "category_17_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_17_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_17_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 18"
    },
    {
      "type": "text",
      "id": "category_18_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_18_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_18_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 19"
    },
    {
      "type": "text",
      "id": "category_19_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_19_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_19_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Category 20"
    },
    {
      "type": "text",
      "id": "category_20_name",
      "label": "Name"
    },
    {
      "type": "image_picker",
      "id": "category_20_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "category_20_link",
      "label": "Link"
    }
  ],
  "presets": [
    {
      "name": "Kids hero section"
    }
  ]
}
{% endschema %}